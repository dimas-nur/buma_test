name: sera_test

packages:
  - apps/*
  - packages/*

scripts:
  analyze:
    run: melos run analyze:dart && melos run analyze:flutter
    description: Run `dart analyze .` and `flutter analyze .` in all packages.

  analyze:dart:
    run: melos exec -c 1 -- "dart analyze ."
    description: Run `dart analyze .` in all packages.

  analyze:flutter:
    run: melos exec -c 1 -- "flutter analyze ."
    description: Run `flutter analyze .` in all packages.

  format:
    run: melos run format:dart && melos run format:flutter
    description: Run `dart format .` and `flutter format .` in all packages

  format:dart:
    run: melos exec -c 1 -- "dart format . --set-exit-if-changed"
    description: Run `dart format .` in all packages

  format:flutter:
    run: melos exec -c 1 -- "flutter format ."
    description: Run `flutter format .` in all packages.

  test:
    run: melos run test:dart && melos run test:flutter
    description: Run all tests in all packages

  test:dart:
    run: melos exec --dir-exists=test --file-exists="*_test.dart" -- "dart test"
    description: Run `dart test` in all packages

  test:flutter:
    run: melos exec --dir-exists=test --file-exists="*_test.dart" -- "flutter test"
    description: Run `flutter test` in all packages

  generate:
    run: melos run generate:dart && melos run generate:flutter
    description: Build all generated files for Dart & Flutter packages in this project.

  generate:dart:
    run: melos exec -c 1 --depends-on="build_runner" --no-flutter -- "dart run build_runner build --delete-conflicting-outputs"
    description: Build all generated files for Dart packages in this project.

  generate:flutter:
    run: melos exec -c 1 --depends-on="build_runner" --flutter -- "flutter pub run build_runner build --delete-conflicting-outputs"
    description: Build all generated files for Flutter packages in this project.
